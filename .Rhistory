cfhuiop$
ll
6+3
6/12
al
al = 5
al
ls()
al2 = 5
ls()
rm(al)
ls()
rm(list = ls())
ls()
getwd()
C:\Users\Archibald Perez\Desktop\IF1103
setwd("C:\Users\Archibald Perez\Desktop\IF1103")
setwd("C:/Users/Archibald Perez/Desktop/IF1103")
getwd()
?sqrt
a=1.5
b=as.float(a)
b=as.integer(a)
b
a=1
is.integer(a)
x=(1,2,3)
x=c(1,2,3)
x
typeof(x)
x[2]
x=c(1,2,3,4,5,6,7,8,9,10)
x[↕c(2,4)]
x[c(2,4)]
x[-1]
x[-2]
x[c(-2,-5)]
class(x)
M=matrix(c(1,2,3,4,5), nrow=2, rcol=3)
M=matrix(c(1,2,3,4,5,6), nrow=2, rcol=3)
M=matrix(c(1,2,3,4,5), nrow=2, ncol=3)
M=matrix(c(1,2,3,4), nrow=2, ncol=3)
M=matrix(c(1,2,3,4,5,6), nrow=2, ncol=3)
M
?dimnames
dimnames(M) = "a"
dimnames(M) = c("x","y")
M
A
A <- matrix(c(4,5,6), nrow = 3, ncol = 3, byrow = TRUE)
A
B <- rbind(A,c(4,5,6))
B
dim(B)
dim(B)
source('C:/Users/Archibald Perez/Desktop/IF1103/TDm1.R')
M[1,3]
M[2,c(1,3)]
M
A <- matrix(c(4,5,6), nrow = 3, ncol = 3, byrow = TRUE)
B <- rbind(A,c(4,5,6))
dim(B)
A <- c(1,4,5)
Mat <- matrix(1, nrow=3, ncol=4)
l1 <- list(A,Mat)
L <- list("Vecteur A"=A, "Matrice Mat"=Mat, "Liste de A et Mat"=l1)
L
L <- list(Vecteur=A, Matrice=Mat, Liste=l1)
L
Mat <- matrix(1:9, nrow = 3, ncol = 3)
Mat
?eigen
eigen(Mat)
Mat
eigen(Mat)
Mat
# Exercice 1
A <- matrix(c(4,5,6), nrow = 3, ncol = 3, byrow = TRUE)
B <- rbind(A,c(4,5,6))
dim(B)
# Exercice 2
A <- c(1,4,5)
Mat <- matrix(1, nrow=3, ncol=4)
l1 <- list(A,Mat)
L <- list(Vecteur=A, Matrice=Mat, Liste=l1)
# Exercice 3
Mat <- matrix(1:9, nrow = 3, ncol = 3)
Mat <- matrix(1:9, nrow = 3, ncol = 3)
eigen(Mat, only.values = TRUE)$vectors[,1]
Mat <- matrix(1:9, nrow = 3, ncol = 3)
eigen(Mat, only.values = TRUE)$vectors
Mat <- matrix(1:9, nrow = 3, ncol = 3)
eigen(Mat) #On remarque que la plus grande valeur propre est la première, on affiche donc le premier vecteur.
eigen(Mat)$vectors[,1]
cathedral <- read.table(file= cathedral.txt, header = TRUE, sep = "\t", row.names = )
cathedral <- read.table(file= \cathedral.txt, header = TRUE, sep = "\t", row.names = )
thedral <
thedral <
cathedral <- read.table(file=C:/Users/Archibald Perez/Desktop/IF1103/cathedral.txt, header = TRUE, sep = "\t", row.names = )
cathedral <- read.table(file="cathedral.txt", header = TRUE, sep = "\t", row.names = )
cathedral
cathedral <- read.table(file="cathedral.txt", header = TRUE, sep = "\t", row.names = 1)
cathedral
x= -10:10
x
y<-1:10
y
x^2
x+y
x*y
x= -10:10
+ x==0
+ x>0
+ x[x>0]
+ x[x>=0]
x<- c(seq(2,9,by=2),11)
+ y<- 2 * (1:5)
x<- c(seq(2,9,by=2),11)
y<- 2 * (1:5)
x
y
x==y
A <- matrix(c(4,5,6), nrow = 3, ncol = 3, byrow = TRUE)
B <- rbind(A,c(4,5,6))
B*A
A <- matrix(c(4,5,6), nrow = 3, ncol = 3, byrow = TRUE)
B <- rbind(A,c(4,5,6))
B%*%A
A <- matrix(c(4,5,6), nrow = 3, ncol = 3, byrow = TRUE)
B <- rbind(A,c(4,5,6))
B%*%A
A%*%B
A%*%solve(B)
A <- matrix(c(4,5,6), nrow = 3, ncol = 3, byrow = TRUE)
B <- rbind(A,c(4,5,6))
B%*%A
A%*%B
A%*%t(B)
Mat <- matrix(1:9, nrow = 3, ncol = 3)
eigen(Mat) #On remarque que la plus grande valeur propre est la première, on affiche donc le premier vecteur.
eigen(Mat)$vectors[,which.max(eigen(Mat, only.values = TRUE))]
Mat <- matrix(1:9, nrow = 3, ncol = 3)
eigen(Mat) #On remarque que la plus grande valeur propre est la première, on affiche donc le premier vecteur.
which.max(eigen(Mat, only.values = TRUE))
Mat <- matrix(1:9, nrow = 3, ncol = 3)
eigen(Mat) #On remarque que la plus grande valeur propre est la première, on affiche donc le premier vecteur.
eigen(Mat, only.values = TRUE)
Mat <- matrix(1:9, nrow = 3, ncol = 3)
eigen(Mat) #On remarque que la plus grande valeur propre est la première, on affiche donc le premier vecteur.
eigen(Mat)$vectors[,which.max(eigen(Mat)$values)]
# Exercice 6
A <- matrix(c(4,5,6), nrow = 3, ncol = 3, byrow = TRUE)
sum(A)
sum(A[,1])
max(A[2,])
a
A
?choose
x <- choose(6,0:6)
x
x <- choose(6,0:6)
sum(x)
max(x)
which.max(x)
sort(x)
library(cluster)
source("ScriptDeMaFonction.R")
x <- 18
y <- 7
A <- matrix(c(4,5,6), nrow = 3, ncol = 3, byrow = TRUE)
MaFonction(x,y,A)
source("ScriptDeMaFonction.R")
x <- 18
y <- 7
A <- matrix(c(4,5,6), nrow = 3, ncol = 3, byrow = TRUE)
Mafonction(x,y,A)
x=c(1,2,3,4,5,6)
sum(x-1)
sum(x)
ma.variance <- function(x)
{
n = length(x)
mx = (1/n)*(sum(x))
var = (1/(1-n))*sum((x-mx)^2)
return(var)
}
x = c(1,2,3,4,5,6,7,8,9)
ma.variance(x)
var(x)
ma.variance <- function(x)
{
n = length(x)
mx = (1/n)*(sum(x))
var = (1/(1-n))*sum((x-mx)^2)
return(c(var,sum((x-mx)^2)))
}
x = c(1,2,3,4,5,6,7,8,9)
ma.variance(x)
ma.variance <- function(x)
{
n = length(x)
mx = (1/n)*(sum(x))
var = (1/(n-1))*sum((x-mx)^2)
return(var)
}
x = c(1,2,3,4,5,6,7,8,9)
ma.variance(x)
var(x)
a=3
a+=1
a++
a
source('C:/Users/Archibald Perez/Desktop/IF1103/TDm1.R', echo=TRUE)
compte <- function(sequence, lettre)
{
compt <- 0
for (i in sequence){
if (i==lettre){compt = compt + 1}
}
return(compt)
}
sequence<-c("a","a","t","g","a","g","c","t","a","g","c","t","g")
compte(sequence,"a")
levels(sequence)
factor(sequence)
compte <- function(sequence, lettre)
{
compt <- 0
for (i in sequence){
if (i==lettre){compt = compt + 1}
}
return(compt)
}
sequence <- c("a","a","t","g","a","g","c","t","a","g","c","t","g")
compte(sequence,"a")
composition <- c(for (i in levels(factor(sequence))) {compte(sequence,i)})
composition
for (i in levels(factor(sequence))) {compte(sequence,i)}
compte <- function(sequence, lettre)
{
compt <- 0
for (i in sequence){
if (i==lettre){compt = compt + 1}
}
return(compt)
}
sequence <- c("a","a","t","g","a","g","c","t","a","g","c","t","g")
compte(sequence,"a")
for (i in levels(factor(sequence))) {print(compte(sequence,i))}
compte <- function(sequence, lettre)
{
compt <- 0
for (i in sequence){
if (i==lettre){compt = compt + 1}
}
return(compt)
}
sequence <- c("a","a","t","g","a","g","c","t","a","g","c","t","g")
compte(sequence,"a")
composition <- for (i in c("a","c","t","g")) {compte(sequence,i)}
composition
compte <- function(sequence, lettre)
{
compt <- 0
for (i in sequence){
if (i==lettre){compt = compt + 1}
}
return(compt)
}
sequence <- c("a","a","t","g","a","g","c","t","a","g","c","t","g")
compte(sequence,"a")
for (i in c("a","c","t","g")) {print(compte(sequence,i))}
# Exercice 1
A <- matrix(c(4,5,6), nrow = 3, ncol = 3, byrow = TRUE)
B <- rbind(A,c(4,5,6))
dim(B)
# Exercice 2
A <- c(1,4,5)
Mat <- matrix(1, nrow=3, ncol=4)
l1 <- list(A,Mat)
L <- list(Vecteur=A, Matrice=Mat, Liste=l1)
# Exercice 3
Mat <- matrix(1:9, nrow = 3, ncol = 3)
eigen(Mat)$vectors[,which.max(eigen(Mat)$values)]
# Exercice 4
cathedral <- read.table(file="cathedral.txt", header = TRUE, sep = "\t", row.names = 1)
# Exercice 5
A <- matrix(c(4,5,6), nrow = 3, ncol = 3, byrow = TRUE)
B <- rbind(A,c(4,5,6))
B%*%A
A%*%B
A%*%t(B)
# Exercice 6
A <- matrix(c(4,5,6), nrow = 3, ncol = 3, byrow = TRUE)
sum(A)
sum(A[,1])
max(A[2,])
# Exercice 7
x <- choose(6,0:6)
sum(x)
max(x)
which.max(x)
sort(x)
# Exercice 8
source("ScriptDeMaFonction.R")
x <- 18
y <- 7
A <- matrix(c(4,5,6), nrow = 3, ncol = 3, byrow = TRUE)
Mafonction(x,y,A)
# Exercice 9
ma.variance <- function(x)
{
n = length(x)
mx = (1/n)*(sum(x))
var = (1/(n-1))*sum((x-mx)^2)
return(var)
}
x = c(1,2,3,4,5,6,7,8,9)
ma.variance(x)
var(x)
# Exercice 10
compte <- function(sequence, lettre)
{
compt <- 0
for (i in sequence){
if (i==lettre){compt = compt + 1}
}
return(compt)
}
sequence <- c("a","a","t","g","a","g","c","t","a","g","c","t","g")
compte(sequence,"a")
for (i in c("a","c","t","g")) {print(compte(sequence,i))}
View(L)
View(L)
View(L)
